$lines: 3; // 1. how many lines of text?
$duration: 1000; // 2. how long is the animation? (milliseconds)
$delay: 400; // 3. what's the delay between each line? (milliseconds)
$theme: #1c1b21; // 4. what is the theme colour?
$angle: -45; // 5. what angle should the background be? (degrees)

$dark: #1c1b21;
$light: #e8e8e9;

.wrapper {
  height: 100vh;
  color: $light;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  position: relative;

  // === Background Shape ======
  &::before {
    content: "";
    display: block;
    position: absolute;
    background-color: $theme;
    width: 400vw;
    height: 100vh;
    top: 0;
    left: 50%;
    z-index: -1;
    transform: skewX($angle + deg) translateX(-100%) scaleX(0);
    will-change: transform;
    animation: revealBG ($duration + $delay) + ms cubic-bezier(0.19, 1, 0.22, 1)
      forwards;
  }
}

.subTitle {
  position: absolute;
  top: 50%;
  left: 25%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 2rem;
}

.title {
  position: absolute;
  color: $dark;
  top: 50%;
  right: 12%;
  font-size: 6.5rem;
  font-weight: 700;
  opacity: 0;
  animation: revealText $duration + ms forwards ($delay + 100) + ms;
}

.button {
  position: absolute;
  font-weight: 700;
  right: 12%;
  bottom: 15%;
  border: 4px dashed $dark;
  color: $dark;
  padding: 10px 20px;
  border-radius: 30px;
  opacity: 0;
  animation: revealDot 300ms linear forwards (($delay) + $delay * 2) + ms;
}

@keyframes revealBG {
  from {
    transform: skewX($angle + deg) translateX(-100%) scaleX(0);
  }
  to {
    transform: skewX($angle + deg) translateX(-100%) scaleX(1);
  }
}

@keyframes revealDot {
  from {
    opacity: 0;
    transform: scale(0);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes revealText {
  from {
    opacity: 0;
    transform: translate(0%, -20%);
  }
  to {
    opacity: 1;
    transform: translate(0%, -50%);
  }
}
